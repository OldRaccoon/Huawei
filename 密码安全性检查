/*
题目描述
密码要求:

 

 

 

1.长度超过8位

 

 

 

2.包括大小写字母.数字.其它符号,以上四种至少三种

 

 

 

3.不能有相同长度超2的子串重复

 

 

 

说明:长度超过2的子串


输入描述:
一组或多组长度超过2的子符串。每组占一行

输出描述:
如果符合要求输出：OK，否则输出NG

示例1
输入
复制
021Abc9000
021Abc9Abc1
021ABC9000
021$bc9000
输出
复制
OK
NG
NG
OK
*/

#include<iostream>
#include<string>
#include<algorithm>
#include<math.h>
using namespace std;

int main() {
	string s;
	while (cin >> s) {
		if (s.size() <= 8) { cout << "NG" << endl; }
		else {
			int array[4] = { 0 };
		for (int i = 0; i <= s.size() - 1; i++) {
			if (s[i] >= 'a'&&s[i] <= 'z') { array[0] = 1; }
			else if (s[i] >= 'A'&&s[i] <= 'Z') { array[1] = 1; }
			else if (s[i] >= '0'&&s[i] <= '9') { array[2] = 1; }
			else { array[3] = 1; }
		
		}
		if (array[0] + array[1] + array[2] + array[3] < 3) { cout << "NG" << endl; }
		else {
			int zuida=0;
			for (int i = 0; i <= s.size() - 2; i++) {
				for (int j = i + 1; j <= s.size() - 1; j++) {
					int count = 0; int a = i; int b = j;
					while (s[a] == s[b]) {
						count++; a++; b++;
					
					}
					zuida = max(zuida, count);
				}
			
			}
			if (zuida > 2) { cout << "NG" << endl; }
			else { cout << "OK" << endl; }
		}
		
		}
	
	
	}



}
