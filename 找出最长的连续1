/*
题目描述
功能: 求一个byte数字对应的二进制数字中1的最大连续数，例如3的二进制为00000011，最大连续2个1
    
输入: 一个byte型的数字
    
输出: 无
     
返回: 对应的二进制数字中1的最大连续数
输入描述:
输入一个byte数字

输出描述:
输出转成二进制之后连续1的个数

示例1
输入
复制
3
输出
复制
2

*/

#include<iostream>
#include<string>
#include<algorithm>
#include<math.h>
using namespace std;


int main() {
	int n;
	while(cin>>n){
		string s= "";
		while (n != 0) {
			if (n % 2 == 1) { s = '1'+s; }
			if (n % 2 == 0) { s = '0' + s; }
			n = n / 2;

	}
		int count = 0; int biggest = 0;
		for (int i = 0; i <= s.size() - 1; i++) {
			if (s[i] == '0') { count = 0; }
			if (s[i] == '1') { count++;
			biggest = max(biggest, count);
			
			}
		
		}
		cout << biggest << endl;
	
	}

}
